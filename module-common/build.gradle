buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

}

group = 'partner42'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12' // 테스트 의존성 추가

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    //jpa mysql 에서 json column사용 가능 라이브러리
    implementation("com.vladmihalcea:hibernate-types-52:2.16.2")

//    implementation 'com.h2database:h2'
    //json변환 util
    implementation 'org.json:json:20220924'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //StringUtils
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    //querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
    //devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jdk8
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.13.3'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    //sse
    implementation 'org.springframework:spring-webmvc:5.3.23'
    //cache

    implementation 'javax.cache:cache-api:1.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.ehcache:ehcache:3.8.1'

}


//common 모듈은 다른 곳에서 참조하는 모듈이기 때문에
//실행가능한 jar파일을 만들필요가 없기 때문에 false로 바꿈. (application.class가 없음.)
tasks.bootJar { enabled = false}
//xxx-plain.jar로 빌드됨.
//plain이 붙은것은 dependency를 가지고 있지 않으므로 실행이 불가능.
//즉 개별 모듈만으로 빌드해서 jar파일로 만듬.
tasks.jar {enabled = true}
//-x test는 테스트 코드를 빼고 빌드하는 command
// ./gradlew clean :module-api:buildNeeded --stacktrace --info --refresh-dependencies -x test
// clean: 이미 빌드되어있는 파일을 지움
// :module-api:buildNeeded module-api를 빌드함.
// --stacktrace --info : info 수준의 로그를 봄.
// --refresh-dependencies : 디펜던시를 다시 리프레시함
// -x test : 테스트는 배제

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
